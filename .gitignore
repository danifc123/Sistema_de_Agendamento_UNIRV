# Model Completo



using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace SeuProjeto.Models
{
    public enum TipoUsuario
    {
        Aluno,
        Psicologo,
        Admin
    }

    public enum StatusAgendamento
    {
        Pendente,
        Confirmado,
        Cancelado,
        Apresentado
    }

    public class Usuario
    {
        [Key]
        public int Id { get; set; }

        [Required, MaxLength(100)]
        public string Nome { get; set; }

        [Required, MaxLength(150)]
        public string Email { get; set; }

        [Required]
        public string Senha { get; set; }

        [Required]
        public TipoUsuario Tipo { get; set; }

        public virtual Aluno Aluno { get; set; }
        public virtual Psicologo Psicologo { get; set; }
    }

    public class Aluno
    {
        [Key, ForeignKey("Usuario")]
        public int Id { get; set; }

        [Required, MaxLength(20)]
        public string Matricula { get; set; }

        [Required, MaxLength(100)]
        public string Curso { get; set; }

        public int Semestre { get; set; }

        public virtual Usuario Usuario { get; set; }
        public virtual ICollection<Agendamento> Agendamentos { get; set; }
        public virtual ICollection<Anotacao> Anotacoes { get; set; }
        public virtual ICollection<FormularioSolicitacao> FormulariosSolicitacao { get; set; }
    }

    public class Psicologo
    {
        [Key, ForeignKey("Usuario")]
        public int Id { get; set; }

        [Required, MaxLength(20)]
        public string Crp { get; set; }

        [MaxLength(100)]
        public string Especialidade { get; set; }

        public virtual Usuario Usuario { get; set; }
        public virtual ICollection<Agendamento> Agendamentos { get; set; }
        public virtual ICollection<Disponibilidade> Disponibilidades { get; set; }
        public virtual ICollection<Anotacao> Anotacoes { get; set; }
    }

    public class Agendamento
    {
        [Key]
        public int Id { get; set; }

        [ForeignKey("Aluno")]
        public int AlunoId { get; set; }

        [ForeignKey("Psicologo")]
        public int PsicologoId { get; set; }

        public DateOnly Data { get; set; }
        public TimeOnly Horario { get; set; }

        [Required]
        public StatusAgendamento Status { get; set; } = StatusAgendamento.Pendente;

        // Campos de auditoria
        public DateTime DataCriacao { get; set; } = DateTime.Now;
        public DateTime? DataConfirmacao { get; set; }
        public DateTime? DataCancelamento { get; set; }

        public virtual Aluno Aluno { get; set; }
        public virtual Psicologo Psicologo { get; set; }
    }

    public class Anotacao
    {
        [Key]
        public int Id { get; set; }

        [ForeignKey("Aluno")]
        public int AlunoId { get; set; }

        [ForeignKey("Psicologo")]
        public int PsicologoId { get; set; }

        [Required]
        public string Descricao { get; set; }

        public DateOnly Data { get; set; }

        // Campo adicional para vincular a um agendamento espec√≠fico (opcional)
        [ForeignKey("Agendamento")]
        public int? AgendamentoId { get; set; }

        public virtual Aluno Aluno { get; set; }
        public virtual Psicologo Psicologo { get; set; }
        public virtual Agendamento Agendamento { get; set; }
    }

    public class FormularioSolicitacao
    {
        [Key]
        public int Id { get; set; }

        [ForeignKey("Aluno")]
        public int AlunoId { get; set; }

        [Required]
        public string Motivo { get; set; }

        public string Observacoes { get; set; }

        public DateOnly DataEnvio { get; set; }

        public virtual Aluno Aluno { get; set; }
    }

    public class Disponibilidade
    {
        [Key]
        public int Id { get; set; }

        [ForeignKey("Psicologo")]
        public int PsicologoId { get; set; }

        public DateOnly Data { get; set; }
        public TimeOnly HoraInicio { get; set; }
        public TimeOnly HoraFim { get; set; }

        public virtual Psicologo Psicologo { get; set; }
    }
}